<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="http://localhost:4000/tag/azure/feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:4000/" rel="alternate" type="text/html" />
  <updated>2021-07-01T16:59:10+09:00</updated>
  <id>http://localhost:4000/tag/azure/feed.xml</id>

  
  
  

  
    <title type="html">IT Technical Training | </title>
  

  
    <subtitle>IT기반기술교육 블로그</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Azure SQL</title>
      <link href="http://localhost:4000/azure-sql" rel="alternate" type="text/html" title="Azure SQL" />
      <published>2021-06-29T19:18:00+09:00</published>
      <updated>2021-06-29T19:18:00+09:00</updated>
      <id>http://localhost:4000/azure-sql</id>
      <content type="html" xml:base="http://localhost:4000/azure-sql"># Azure MSSQL

#### SQL Virtual Machine, Azure SQL Database, Azure SQL Managed Instance

---

### Azure SQL 구분

&gt; Azure에서 제공하는 MSSQL 의 resource 형태가 다른 DBMS보다 다양하다보니 처음에 구분짓기가 어려울 수 있습니다.
&gt; Azure SQL은 크게 3가지로 분류할 수 있습니다.

![azuresql01](/assets/images/azure-azuresql-01.PNG){: height=&quot;100%&quot; width=&quot;100%&quot;} 

- IaaS VM에 SQL Server가 설치된 이미지 형태로 배포가 진행되는 `SQL Virtual Machine`
  
MSSQL의 단위는 Instance 하위 N개의 Database로 구성되어 있는 형태입니다.

- Database 단위로 배포되어 관리되는 `Azure SQL Database`
- Instance 단위로 배포되어 관리되는 `Azure SQL Managed Instance` 이하 `Managed Instance`
  
로 나뉘어 제공됩니다.

---

### 배포 모델 종류

&gt; Azure SQL 종류마다 배포 기준이 되는 모델이(vCore, DTU, eDTU) 상이 합니다.

![azuresql-deployment-model](/assets/images/azure-azuresql-02.PNG){: height=&quot;100%&quot; width=&quot;100%&quot;}

`SQL Virtual Machine`의 경우 VM SKU와 OS, SQL Version 등을 선택하여 배포합니다.

`SQL Database` 의 경우 DTU 단위 배포모델과 vCore 단위 배포모델 두종류로 나뉩니다.

`Managed Instance`의 경우 vCore 단위 배포모델만 제공합니다.

&gt; DTU(Database Transaction Units)란? CPU, Memory, Data I/O, Transaction Log I/O 등을 수치화 시켜 비공식적인 Hyper-v 커맨드를 통해 특정 물리서버의 능력을 수치화 시킨 것.
&gt; 
&gt; 간단히 여러 resource를 DTU라는 단위로 수치화 시켜서 해당 단위로 배포되는 모델이라고 생각하면 됩니다.
&gt;
&gt; eDTU(Elastic database transaction units)는 Elastic Pool 에서 사용하는 DTU단위
&gt; 
&gt; Elastic Pool은 Single Database를 하나의 Pool 단위로 묶어서(resource 제한도 Pool 범위내에서 공유) 사용할 수 있는 기능.

![azuresql-dtu-vs-vcore](/assets/images/azure-azuresql-03.PNG){: height=&quot;100%&quot; width=&quot;100%&quot;}

vCore 모델의 경우 Storage Size에 의해 IOPS가 비례하여 증가되고 vCore 개수도 별개로 선택할 수 있기 때문에 알맞은 워크로드(cpu 연산이 많은 or transaction이 잦은(iops))에 따라 알맞은 배포모델을 선택할 수 있습니다. DTU 모델의 경우 vCore 가 부족하거나 IOPS가 부족하게되면 DTU를 증가하는 형태로 단순하게 관리할 수 있습니다.

DTU 단위가 개념은 이해가지만 현재 사용중인 spec 대비 어느정도인지 대략적인 감을 잡기 위해 제가 사용하는 방법은 다음과 같습니다.
[Azure SQL DTU to vCore](https://docs.microsoft.com/ko-kr/azure/azure-sql/database/migrate-dtu-to-vcore) 에서 보면 DTU 모델에서 vCore 모델로 SKU를 변경할 때 참고하기 위한 정보를 제공합니다.
이걸 역으로 계산하면 특정 vCore 수만큼의 performance 정도를 xDTU 에서 제공하는지 대략적으로 감을 잡을 수 있습니다.

[DTU Calculator](https://dtucalculator.azurewebsites.net/) 를 제공하지만 사용하기가 번거롭기에 간단히 위와 같은 형태로 확인하는 방법도 있다 정도로 생각하면 될 것 같습니다.

### Resource Limit(vCore)
&gt; 해당 리소스별로 제공되는 resource limit이나 형태가 다르다.

Azure SQL Database(vCore)

계층 | 범용(General Purpose) | 중요 비즈니스(Business Critical) | Hyperscale
--- | --------------------- | ----------------------------- | ----------  
대상 | 일반적인 용도 | 높은 IOPS 및 가용성 | 대용량 데이터베이스
Compute | Gen5: vCore 2 ~ 80 (2.3 GHz) | Gen5: vCore 2 ~ 80 (2.3 GHz) | Gen5: vCore 2 ~ 80 (2.3 GHz)</content>

      
      
      
      
      

      <author>
          <name>jooho812</name>
        
        
      </author>

      

      
        <category term="azure" />
      

      
        <summary type="html">Azure MSSQL</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Azure Database Service</title>
      <link href="http://localhost:4000/Azure-database" rel="alternate" type="text/html" title="Azure Database Service" />
      <published>2021-06-25T19:18:00+09:00</published>
      <updated>2021-06-25T19:18:00+09:00</updated>
      <id>http://localhost:4000/Azure-database</id>
      <content type="html" xml:base="http://localhost:4000/Azure-database"># Azure Database Service

---

Azure 에서 제공하는 Database 관련 Service에 어떤 종류가 있고 해당 Service들에 대해 간단하게 정리해보자.


![image](/assets/images/azure-azure-service.PNG){: height=&quot;120%&quot; width=&quot;120%&quot;} 


### RDBMS
- [Azure MSSQL (Azure SQL, Azure Managed Instance)](/azure-sql) : 관리형 MSSQL 
- [Azure Database for Mysql]() : Mysql community version 데이터베이스 엔진을 기반으로 하는 Azure의 RDBMS
- [Azure Database for MariaDB]() : MariaDB community version 데이터베이스 엔진을 기반으로 하는 Azure의 RDBMS
- [Azure Database for PostgreSQL]() : PostgreSQL community version 데이터베이스 엔진을 기반으로 하는 Azure의 RDBMS

### NOSQL
- [Azure Cosmos DB]() : Azure의 완전관리형 NoSQL 데이터베이스(SQL, Cassandra, Gremlin, MongoDB, Table API 제공)
- [Azure Cache For Redis]() : redis 기반 in-memory data store

### DW
- [Azure Synapse Analytics]() : 
- 

### Data lake &amp; Analytics
- [Azure Data Lake Storage Gen2]() : 
- [Azure Databrics]() : 
- [Azure Data Explorer]() : 


# HEADER

## HEADER

### HEADER


I just love **bold text**.

This is really ***very*** very important text.


First Header | Second Header
------------ | ------------- 
Content cell 1 | Content cell 2
Content column 1 | Content column 2

- [x] this is a complete item
- [ ] this is an incomplete item
- [x] @mentions, #refs, [links](), **formatting**, and &lt;del&gt;tags&lt;/del&gt; supported
- [x] list syntax required (any unordered or ordered list supported)

```javascript
function test() {
    console.log(&quot;hello&quot;)
}
```

문단 중간에 `Code`를 넣을 수 있습니다.
예를 들어 `printf(&quot;hello world!&quot;);` 이런 식으로 들어갑니다.

As Grace Hopper said:

&gt; I’ve always been more interested.
&gt; in the future than in the past.

＼*literal asterisks＼*
*literal asterisks*
__＼*＼*Text＼*＼*__
_＼_Tom＼__

GitHub supports emoji!
:+1: :sparkles: :camel: :tada:
:rocket: :metal: :octocat:




---
***

작성 예시
&lt;https://img.shields.io/badge/license-mit-green.svg&quot;&gt;
https://img.shields.io/badge/--.svg

APM: /apm/l/:packageName.svg
AUR license: /aur/license/:packageName.svg</content>

      
      
      
      
      

      <author>
          <name>jooho812</name>
        
        
      </author>

      

      
        <category term="azure" />
      

      
        <summary type="html">Azure Database Service</summary>
      

      
      
    </entry>
  
</feed>
